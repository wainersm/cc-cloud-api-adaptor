name: test-e2e
on: [pull_request]

jobs:
  podvm_builder:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        os:
          # Please keep this list in alphabetical order.
          #- centos
          - ubuntu
        include:
          #- os: centos
          #  dockerfile: Dockerfile.podvm_builder.centos
          - os: ubuntu
            dockerfile: Dockerfile.podvm_builder
    steps:
    - name: Checkout Code
      uses: actions/checkout@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Login to Github container Registry
      uses: docker/login-action@v2
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Build the podvm builder
      uses: docker/build-push-action@v3
      with:
        tags: |
          ghcr.io/${{ github.repository_owner }}/ci-podvm-builder-${{ matrix.os }}:pr${{ github.event.number  }}
        push: true
        context: podvm
        platforms: linux/amd64
        #cache-to: type=local,dest=/tmp/.buildx-cache,mode=max
        file: |
          podvm/${{ matrix.dockerfile }}
        build-args: |
          "CAA_SRC=https://github.com/${{ github.repository }}.git"
          "CAA_SRC_REF=${{ github.ref }}"
  podvm:
    needs: podvm_builder
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        os:
          # Please keep this list in alphabetical order.
          #- centos
          - ubuntu
        provider:
          - libvirt
        include:
          #- os: centos
          #  dockerfile: Dockerfile.podvm.centos
          - os: ubuntu
            dockerfile: Dockerfile.podvm
    steps:
    - name: Checkout Code
      uses: actions/checkout@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Build the podvm image
      uses: docker/build-push-action@v3
      with:
        tags: |
          podvm-${{ matrix.os }}-${{ matrix.provider }}:pr${{ github.event.number }}
        push: false
        load: true
        context: podvm
        platforms: linux/amd64
        #cache-from: type=local,dest=/tmp/.buildx-cache,mode=max
        file: |
          podvm/${{ matrix.dockerfile }}
        build-args: |
          "CLOUD_PROVIDER=${{ matrix.provider }}"
          "BUILDER_IMG=ghcr.io/${{ github.repository_owner }}/ci-podvm-builder-${{ matrix.os }}:pr${{ github.event.number }}"
    - name: Extract the podvm qcow2
      run: ./hack/download-image.sh podvm-${{ matrix.os }}-${{ matrix.provider }}:pr${{ github.event.number }} . -o podvm-${{ matrix.os }}-${{ matrix.provider }}.qcow2
      working-directory: podvm
  # TODO: This almost identical to image.yaml. Let's use shared workflows to avoid duplication.
  caa-build:
    runs-on: ubuntu-latest
    env:
      go_version: 1.18
    strategy:
      fail-fast: false
      matrix:
        provider:
          # Please keep this list in alphabetical order.
          #- aws
          #- azure
          - libvirt
          #- vsphere
        arches:
          - linux/amd64
        #include:
        #  - provider: ibmcloud
        #    arches: linux/amd64,linux/s390x
    steps:
    - name: Checkout the code
      uses: actions/checkout@v3

    - name: Setup Golang version ${{ env.go_version }}
      uses: actions/setup-go@v3
      with:
        go-version: ${{ env.go_version }}

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Install build dependencies
      if: ${{ matrix.provider == 'libvirt' }}
      run: |
        sudo apt-get update -y
        sudo apt-get install -y libvirt-dev

    - name: Login to Github container Registry
      uses: docker/login-action@v2
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Build and push the cloud-api-adaptor image
      uses: docker/build-push-action@v3
      with:
        tags: |
          ghcr.io/${{ github.repository_owner }}/ci-cloud-api-adaptor-${{ matrix.provider }}:pr${{ github.event.number  }}
        push: true
        context: .
        platforms: ${{ matrix.arches }}
        #cache-to: type=local,dest=/tmp/.buildx-cache,mode=max
        file: Dockerfile
        build-args: |
          "CLOUD_PROVIDER=${{ matrix.provider }}"
